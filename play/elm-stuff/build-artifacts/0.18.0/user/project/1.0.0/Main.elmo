var _user$project$Main$mapping = function () {
	var guardians = {
		ctor: '::',
		_0: 'Star-lord',
		_1: {
			ctor: '::',
			_0: 'Groot',
			_1: {
				ctor: '::',
				_0: 'Gamora',
				_1: {
					ctor: '::',
					_0: 'Drax',
					_1: {
						ctor: '::',
						_0: 'Rocket',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	};
	var lengths = A2(_elm_lang$core$List$map, _elm_lang$core$String$length, guardians);
	return A2(
		_elm_lang$core$List$filter,
		function (x) {
			return _elm_lang$core$Native_Utils.cmp(x, 6) < 0;
		},
		lengths);
}();
var _user$project$Main$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(
		_elm_lang$core$Basics$toString(_user$project$Main$mapping)));
var _user$project$Main$isEven = function (num) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], num, 2),
		0) ? true : false;
};
var _user$project$Main$filtering = function (arg) {
	return A2(_elm_lang$core$List$filter, _user$project$Main$isEven, arg);
};
var _user$project$Main$part = function (arg) {
	return _elm_lang$core$List$unzip(arg);
};
var _user$project$Main$preprend = F2(
	function (list, newItem) {
		return {ctor: '::', _0: newItem, _1: list};
	});
var _user$project$Main$reverse = function (list) {
	return _elm_lang$core$List$reverse(
		{
			ctor: '::',
			_0: 1,
			_1: {
				ctor: '::',
				_0: 2,
				_1: {
					ctor: '::',
					_0: 3,
					_1: {
						ctor: '::',
						_0: 4,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$range = F2(
	function (arg1, arg2) {
		return A2(_elm_lang$core$List$range, arg1, arg2);
	});
